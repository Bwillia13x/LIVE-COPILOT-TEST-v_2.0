name: 🚀 Production Deployment

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'
  NPM_VERSION: '8'

jobs:
  # Quality Assurance
  quality-check:
    name: 🔍 Quality Assurance
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Type checking
      run: npm run type-check
      
    - name: 🧹 Lint code
      run: npm run lint
      
    - name: 🧪 Run tests
      run: npm test

  # Build and Deploy
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build for production
      run: npm run build:production
      env:
        VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
        VITE_APP_ENV: production
        VITE_ENABLE_ANALYTICS: true
        VITE_ENABLE_PERFORMANCE_MONITORING: true
        
    - name: 🧪 Verify build
      run: |
        ls -la dist/
        echo "Build size report:"
        du -sh dist/*
        
    - name: 📊 Bundle analysis
      run: |
        echo "Bundle analysis complete"
        echo "Main bundle size:" && stat -c%s dist/assets/*.js | head -1
        
    # Deploy to Netlify
    - name: 🌐 Deploy to Netlify
      uses: netlify/actions/deploy@master
      with:
        publish-dir: './dist'
        production-deploy: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    # Alternative: Deploy to Vercel
    # - name: 🚀 Deploy to Vercel
    #   uses: vercel/action@v1
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
    #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
    #     vercel-args: '--prod'

  # Health Check
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 🔍 Check deployment health
      run: |
        sleep 30  # Wait for deployment to propagate
        curl -f https://voicenotes.app || exit 1
        echo "✅ Deployment health check passed"
        
    - name: 📊 Performance audit
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "📊 Performance metrics will be available in production monitoring"
